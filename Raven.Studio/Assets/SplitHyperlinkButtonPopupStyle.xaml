<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:delay="clr-namespace:Delay"
    xmlns:b="clr-namespace:Boogaart.Silverlight.Behaviors"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:Behaviors="clr-namespace:Raven.Studio.Behaviors">
    <Style TargetType="delay:SplitHyperlinkButtonPopup">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="14,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="delay:SplitHyperlinkButtonPopup">
                    <Grid Cursor="{TemplateBinding Cursor}"
                          Background="{TemplateBinding Background}"
                          x:Name="LayoutRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LinkStates">
                                <VisualState x:Name="ActiveLink">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ActiveBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="ActiveBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Content" />
                                        <ColorAnimation Duration="0" To="White"
                                                        Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="DropDownArrow" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InactiveLink" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="ActiveBorder" Visibility="Collapsed" Grid.ColumnSpan="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC64266" Offset="0" />
                                    <GradientStop Color="#FFBE214B" Offset="0.014" />
                                    <GradientStop Color="#FF75213C" Offset="0.479" />
                                    <GradientStop Color="#FF57001C" Offset="0.535" />
                                    <GradientStop Color="#FF300116" Offset="0.986" />
                                    <GradientStop Color="#FF5F404E" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>

                        </Border>
                        <TextBlock x:Name="Content"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}" />
                        <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0 4 0 4" x:Name="Separator"
                                    Opacity="0.3">
                            <Path Data="M0,0 L0,1" Stretch="Fill" UseLayoutRounding="True">
                                <Path.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#B9B9B9" Offset="0" />
                                        <GradientStop Color="#B9B9B9" Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Stroke>
                            </Path>
                            <Path Data="M0,0 L0,1" Stretch="Fill" UseLayoutRounding="True">
                                <Path.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#F8F8F8" Offset="0" />
                                        <GradientStop Color="#F8F8F8" Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Stroke>
                            </Path>
                        </StackPanel>
                        <Grid x:Name="SplitElement" Grid.Column="2" Background="Transparent"
                              ToolTipService.ToolTip="{TemplateBinding DropDownToolTip}">
                            <Path x:Name="DropDownArrow" Data="M 0,0 L 8,0 L 4,4 Z" Fill="{TemplateBinding Foreground}" Margin="5 0 5 0"
                                  VerticalAlignment="Center" />
                        </Grid>
                        <Border Grid.ColumnSpan="3" VerticalAlignment="Bottom" Margin="0,-1,0,0">
                            <Popup x:Name="PopupElement" b:Popup.StaysOpen="False">
                                <ContentPresenter x:Name="PopupContent"  Content="{TemplateBinding PopupContent}">
                                    <i:Interaction.Triggers>
                                        <Behaviors:HandledMouseLeftButtonUpTrigger>
                                            <Behaviors:ClosePopupAction TargetObject="{Binding ElementName=PopupElement}"/>
                                        </Behaviors:HandledMouseLeftButtonUpTrigger>
                                    </i:Interaction.Triggers>
                                </ContentPresenter>
                            </Popup>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
